<!doctype html>
<html lang="en" class="h-full">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= name %></title>
  <link href="../assets/tailwind.css" rel="stylesheet">
  <link rel="preconnect" href="https://cdn.fontshare.com">
  <link href="https://api.fontshare.com/v2/css?f[]=clash-display@400,500,600,700&f[]=satoshi@400,500,700&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary: #6366f1;
      --primary-hover: #4f46e5;
      --background: #0f172a;
      --surface: #1e293b;
      --text-primary: #f8fafc;
      --text-secondary: #94a3b8;
      --error: #ef4444;
      --success: #10b981;
    }
    
    body {
      background: var(--background);
      color: var(--text-primary);
      font-family: 'Satoshi', sans-serif;
    }
    
    .form-container {
      background: var(--surface);
      padding: 2.5rem;
      border-radius: 1rem;
      box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
      width: 100%;
      max-width: 28rem;
      position: relative;
      overflow: hidden;
    }
    
    .form-container::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, rgba(99, 102, 241, 0.1) 0%, transparent 70%);
      animation: rotate 15s linear infinite;
      z-index: 0;
    }
    
    @keyframes rotate {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    
    .form-content {
      position: relative;
      z-index: 1;
    }
    
    .title {
      font-family: 'Clash Display', sans-serif;
      font-weight: 600;
      color: var(--text-primary);
      letter-spacing: -0.025em;
    }
    
    .input-field {
      background: rgba(15, 23, 42, 0.7);
      border: 1px solid #334155;
      color: var(--text-primary);
      padding: 0.875rem 1rem;
      border-radius: 0.5rem;
      transition: all 0.2s ease;
      font-size: 0.9375rem;
      backdrop-filter: blur(8px);
    }
    
    .input-field:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.25);
      outline: none;
    }
    
    .input-field::placeholder {
      color: var(--text-secondary);
      opacity: 0.7;
    }
    
    .submit-btn {
      background: var(--primary);
      transition: all 0.2s ease;
      padding: 0.875rem 1rem;
      border-radius: 0.5rem;
      font-weight: 500;
      font-size: 0.9375rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }
    
    .submit-btn:hover {
      background: var(--primary-hover);
      transform: translateY(-1px);
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }
    
    .submit-btn:active {
      transform: translateY(0);
    }
    
    .form-group {
      position: relative;
      margin-bottom: 1.25rem;
    }
    
    .label {
      display: block;
      margin-bottom: 0.5rem;
      font-size: 0.875rem;
      font-weight: 500;
      color: var(--text-primary);
    }
    
    .password-toggle {
      position: absolute;
      right: 1rem;
      top: 2.5rem;
      cursor: pointer;
      color: var(--text-secondary);
      transition: color 0.2s ease;
    }
    
    .password-toggle:hover {
      color: var(--primary);
    }
    
    .link {
      color: var(--primary);
      font-weight: 500;
      transition: color 0.2s ease;
      text-decoration: none;
    }
    
    .link:hover {
      color: var(--primary-hover);
      text-decoration: underline;
    }
    
    .error-message {
      color: var(--error);
      font-size: 0.8125rem;
      margin-top: 0.25rem;
      display: none;
    }
    
    .input-field.error {
      border-color: var(--error);
    }
    
    @media (max-width: 640px) {
      .form-container {
        padding: 1.5rem;
        border-radius: 0;
        min-height: 100vh;
      }
    }
    
    /* Animation classes */
    .animate-fade-in {
      animation: fadeIn 0.5s ease-out forwards;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
  </style>
</head>
<body class="h-full flex items-center justify-center p-4">
  <div class="form-container animate-fade-in">
    <div class="form-content">
      <div class="text-center mb-8">
        <h1 class="title text-3xl mb-2">Create Account</h1>
        <p class="text-sm text-gray-400">Join our platform to get started</p>
      </div>
      
      <form method="POST" action="/auth/register" id="registerForm" class="mb-4">
        <div class="form-group">
          <label for="username" class="label">Username</label>
          <input 
            type="text" 
            id="username" 
            name="username" 
            placeholder="Enter your username" 
            class="input-field w-full"
            required
            autocomplete="username"
          >
          <div class="error-message" id="username-error"></div>
        </div>
        
        <div class="form-group">
          <label for="email" class="label">Email</label>
          <input 
            type="email" 
            id="email" 
            name="email" 
            placeholder="your@email.com" 
            class="input-field w-full"
            required
            autocomplete="email"
          >
          <div class="error-message" id="email-error"></div>
        </div>
        
        <div class="form-group">
          <label for="password" class="label">Password</label>
          <input 
            type="password" 
            id="password" 
            name="password" 
            placeholder="••••••••" 
            class="input-field w-full"
            required
            autocomplete="new-password"
            minlength="8"
          >
          <span class="password-toggle" id="togglePassword">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
              <circle cx="12" cy="12" r="3"></circle>
            </svg>
          </span>
          <div class="error-message" id="password-error"></div>
        </div>
        
        <button type="submit" class="submit-btn w-full text-white font-medium mb-6 mt-2">
          Register
        </button>
      </form>
      
      <div class="text-center text-sm">
        Already have an account? 
        <a href="/login" class="link">Sign in</a>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Password toggle functionality
      const togglePassword = document.getElementById('togglePassword');
      const password = document.getElementById('password');
      
      if (togglePassword && password) {
        togglePassword.addEventListener('click', function() {
          const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
          password.setAttribute('type', type);
          this.innerHTML = type === 'password' ? 
            `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
              <circle cx="12" cy="12" r="3"></circle>
            </svg>` :
            `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path>
              <line x1="1" y1="1" x2="23" y2="23"></line>
            </svg>`;
        });
      }
      
      // Form validation
      const form = document.getElementById('registerForm');
      if (form) {
        form.addEventListener('submit', function(e) {
          let isValid = true;
          
          // Clear previous errors
          document.querySelectorAll('.error-message').forEach(el => {
            el.style.display = 'none';
            el.textContent = '';
          });
          document.querySelectorAll('.input-field').forEach(el => {
            el.classList.remove('error');
          });
          
          // Username validation
          const username = document.getElementById('username');
          if (username.value.length < 3) {
            showError(username, 'username-error', 'Username must be at least 3 characters');
            isValid = false;
          }
          
          // Email validation
          const email = document.getElementById('email');
          if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email.value)) {
            showError(email, 'email-error', 'Please enter a valid email address');
            isValid = false;
          }
          
          // Password validation
          const password = document.getElementById('password');
          if (password.value.length < 8) {
            showError(password, 'password-error', 'Password must be at least 8 characters');
            isValid = false;
          }
          
          if (!isValid) {
            e.preventDefault();
          }
        });
      }
      
      function showError(input, errorId, message) {
        input.classList.add('error');
        const errorElement = document.getElementById(errorId);
        errorElement.textContent = message;
        errorElement.style.display = 'block';
      }
    });
  </script>
</body>
</html>
